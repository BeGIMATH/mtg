* mtg 01/02/08  
--------------

Réunion avec Christophe:

MTG : arbre quotienté 

parent / children : structure d'arbre
complex / component : structure d'arbre en échelle

vid ou vsid : identifiant identique pour chaque vertex avec la possibilité de retrouver l'échelle

Implémentation préconisée:
Coloriage

Problème: lors de la construction, on construit l'arbre top / down et le coloriage est bottom / up
De plus on a pas un quotientement parfait:
Certain noeuds peuvent ne pas être décomposés.

Donc ajout d'un troisième type d'edge (sewing edges ou inter scale edges). 
Comment un noeud d'une echelle plus grossiere se racorde à un noeud d'une échelle plus fine.
-> add_child(parent), add_component(complex), add_memory, add_loc, add_sewing(vids1, vids2)

Representer le coloriage:

vid -> couleurs: liste des echelles.
Comment définir la relation d'ordre sur les echelles?
cf latice.

Type de décomposition de noeud à une échelle existante:
on veut pouvoir dans un noeud ajouter:
  * une séquence, un arborescence axiale (couture automatique car noeud début
  et noeud fin) et une arborescence (couture à définir dans la méthode).
  
Questions non abordée:
* comment mixer topologie et géometrie.
* comment ajouter plusieurs instances d'une arborescence
* ajouter des types aux noeuds
* ajout de propriétés.

04/02/08

instantiation => propriété
propriété des instance au niveau des edges.

06/05/08
* Interface et implementation pour arborescence.
* Premiers pas dans l'implémentation.
* Pas d'échelles ni de propriétés.
* Début d'interface.
